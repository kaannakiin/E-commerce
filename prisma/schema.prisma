// prisma/schema.prisma
datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            String  @id @default(cuid())
    name          String?
    surname       String?
    phone         String?
    role          Role    @default(USER)
    email         String  @unique
    password      String
    emailVerified Boolean @default(false)
    image         String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum Role {
    SUPERADMIN
    ADMIN
    USER
}

enum VariantType {
    COLOR
    SIZE
    WEIGHT
}

model Product {
    id               String     @id @default(uuid())
    name             String
    description      String
    shortDescription String
    categories       Category[] @relation("ProductCategory") // Değişiklik burada
    taxRate          Float      @default(18)
    createdAt        DateTime   @default(now())
    updatedAt        DateTime   @updatedAt
    Variant          Variant[]
}

model Variant {
    id          String      @id @default(uuid())
    type        VariantType
    value       String
    unit        String? // only for weight
    price       Float
    slug        String      @unique
    discount    Float       @default(0)
    isPublished Boolean     @default(false)
    stock       Int         @default(0)
    product     Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId   String
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    Image       Image[]

    @@index([productId])
}

model Image {
    id         String    @id @default(uuid())
    url        String    @unique
    alt        String?
    variantId  String
    variant    Variant   @relation(fields: [variantId], references: [id], onDelete: Cascade)
    createdAt  DateTime  @default(now())
    updatedAt  DateTime  @updatedAt
    categoryId String?
    category   Category? @relation(fields: [categoryId], references: [id])

    @@index([variantId])
    @@index([categoryId])
}

model Category {
    id          String    @id @default(uuid())
    name        String
    description String?
    slug        String    @unique
    imageUrls   String?
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    products    Product[] @relation("ProductCategory") // Değişiklik burada
    Image       Image[]
}
